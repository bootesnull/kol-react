{"version":3,"file":"static/js/144.af208344.chunk.js","mappings":"gOAmEA,EAhEsB,SAAC,GAA2C,IAAzCA,EAAwC,EAAxCA,WAAaC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAE7C,GAAgBC,EAAAA,EAAAA,UAASC,KAAKC,MAAML,EAAaE,IAA1CI,GAAP,eACA,GAAsCH,EAAAA,EAAAA,UAAS,GAA/C,eAAOI,EAAP,KAAoBC,EAApB,KAYMC,EAAa,SAACC,GAEhB,IAAMC,EAAaC,OAAOF,EAAMG,OAAOC,aACvCN,EAAeG,EAClB,EAYD,OAJAI,EAAAA,EAAAA,YAAU,WACNC,OAAOC,SAAS,CAAEC,SAAU,SAAUC,IAAK,OAC9C,GAAE,CAACZ,KAGA,+BACI,iBAAKa,UAAU,aAAf,WACI,mBACIC,QAzBS,WAEtBb,GAAe,SAACc,GAAD,OAAUA,EAAO,CAAjB,GACjB,EAuBeF,UAAS,eAA0B,IAAhBb,EAAoB,WAAa,IAFxD,kBAbe,WAEvB,IAAIgB,EAAQnB,KAAKoB,OAAOjB,EAAc,GAAKN,GAAaA,EACxD,OAAO,IAAIwB,MAAMxB,GAAWyB,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OAAYN,EAAQM,EAAM,CAA1B,GAC1C,CAiBYC,GAAqBH,KAAI,SAACI,EAAMC,GAAP,OACtB,mBAEAX,QAASZ,EACTW,UAAS,yBAAoBb,IAAgBwB,EAAO,SAAW,MAH/D,UAKA,0BAAOA,KAJFC,EAFiB,KAW1B,mBACIX,QAjDK,WAElBb,GAAe,SAACc,GAAD,OAAUA,EAAO,CAAjB,GACjB,EA+CeF,UAAS,eAAUb,IAAgBD,EAAQ,WAAa,IAF5D,sBASf,E,oBCwBD,EApFyB,WAErB,IAAM2B,EAAQC,aAAaC,QAAQ,SACnC,GAA0ChC,EAAAA,EAAAA,UAAS,IAAnD,eAAOiC,EAAP,KAAuBC,EAAvB,MACiBC,EAAAA,EAAAA,OAEjBvB,EAAAA,EAAAA,YAAU,YAINwB,EAAAA,EAAAA,KAHiB,SAACC,GACdH,GAAiB,OAAIG,GACxB,GACgCP,EACpC,GAAE,IAQH,OACI,iCACI,iBAAKb,UAAU,aAAf,WACI,gBAAKA,UAAU,QAAf,UACI,eAAIA,UAAU,OAAd,kCAEJ,gBAAKA,UAAU,QAAf,UACI,SAAC,KAAD,CAAMqB,GAAE,2BAAR,oCAGR,iBAAKrB,UAAU,yBAAf,WACI,8BACI,2BACI,mCACA,yCACA,wCACA,sCACA,6CACA,oCACA,mCACA,sCAEHgB,GAAiBA,EAAcT,KAAK,SAACI,EAAMC,GACpC,OACI,2BACI,wBAAKD,EAAKW,SAEV,wBAAKX,EAAKY,eACV,wBAAKZ,EAAKa,cACV,wBAAKb,EAAKc,YACV,wBAAKd,EAAKe,mBACV,wBAAKf,EAAKgB,UACV,wBAAKhB,EAAKiB,SAEV,2BAEI,SAAC,KAAD,CAAMP,GAAE,kCAA6BV,EAAKkB,IAA1C,mBACA,SAAC,KAAD,CAAMR,GAAE,uCAAkCV,EAAKkB,IAA/C,mBACA,mBAAQ5B,aAAuBU,EAAKkB,GAApC,UAA0C,cAAG7B,UAAU,sBAAb,2BAdzCY,EAmBhB,OAILI,EAAcc,OAAS,GAEvB,SAAC,EAAD,CAGIlD,WAAYoC,EAAcc,OAC1BjD,UAAW,EACXC,UAAW,KAInB,qDAKf,C","sources":["common/components/PaginationJSX.js","layout/Dashboard/components/AnnouncementList.js"],"sourcesContent":["import React, { useState , useEffect } from \"react\";\nimport './pagination.css'\n\nconst PaginationJSX = ({ dataLength , pageLimit, dataLimit }) => {\n\n    const [pages] = useState(Math.round(dataLength / dataLimit));\n    const [currentPage, setCurrentPage] = useState(1);\n  \n    const goToNextPage = () => {\n       // not yet implemented\n       setCurrentPage((page) => page + 1);\n    }\n  \n    const goToPreviousPage = () => {\n       // not yet implemented\n       setCurrentPage((page) => page - 1);\n    }\n  \n    const changePage = (event) => {\n        // not yet implemented\n        const pageNumber = Number(event.target.textContent);\n        setCurrentPage(pageNumber);\n    }\n  \n    const getPaginationGroup = () => {\n        // not yet implemented\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n        return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n    };\n\n    useEffect(() => {\n        window.scrollTo({ behavior: 'smooth', top: '0px' });\n    }, [currentPage]);\n\n    return (     \n        <>\n            <div className=\"pagination\">\n                <button\n                    onClick={goToPreviousPage}\n                    className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\n                >\n                    prev\n                </button>\n\n                \n                {getPaginationGroup().map((item, index) => (\n                    <button\n                    key={index}\n                    onClick={changePage}\n                    className={`paginationItem ${currentPage === item ? 'active' : null}`}\n                    >\n                    <span>{item}</span>\n                    </button>\n                ))}\n\n                {/* next button */}\n                <button\n                    onClick={goToNextPage}\n                    className={`next ${currentPage === pages ? 'disabled' : ''}`}\n                >\n                    next\n                </button>\n            </div>\n        </>\n    );\n}\n\nexport default PaginationJSX","import React, { useEffect, useState } from \"react\";\nimport {getKolAllAnnouncements , deleteAnnouncement} from '../../../slices/api/simpleApi'\nimport Pagination from \"../../../common/components/PaginationJSX\";\nimport { Link , useNavigate } from \"react-router-dom\";\n\nconst AnnouncementList = () => {\n\n    const token = localStorage.getItem(\"token\");\n    const [announcements , setAnnouncements]= useState([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const callback = (data) => {\n            setAnnouncements([...data]);\n        };\n        getKolAllAnnouncements(callback, token);\n    }, []);\n\n    const handleDelete = (id) => {\n        // deleteAnnouncement(token , id);\n        // navigate('../../dashboard/announcement/list')\n    }\n    \n\n    return (\n        <>\n            <div className=\"row col-12\">\n                <div className=\"col-6\">\n                    <h3 className=\"mt-4\">Kol Announcements</h3>\n                </div>\n                <div className=\"col-6\">\n                    <Link to={`/dashboard/announcement/`}>Add Announcement</Link>\n                </div>\n            </div>\n            <div className=\"dashboard-main-listing\">\n                <table>\n                    <tr>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Start Date</th>\n                        <th>End Date</th>\n                        <th>Social Platform</th>\n                        <th>Status</th>\n                        <th>Image</th>\n                        <th>Action</th>\n                    </tr>\n                    {announcements && announcements.map( (item, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{item.title}</td>\n                                \n                                    <td>{item.description}</td>\n                                    <td>{item.start_date}</td>\n                                    <td>{item.end_date}</td>\n                                    <td>{item.social_platform}</td>\n                                    <td>{item.status}</td>\n                                    <td>{item.image}</td>\n                                    \n                                    <td>\n                                        \n                                        <Link to={`/dashboard/announcement/${item.id}`}>Edit</Link>\n                                        <Link to={`/dashboard/announcement/view/${item.id}`}>View</Link>\n                                        <button onClick={ handleDelete(item.id)} ><i className=\"fa-regular fa-trash\">Delete</i></button>\n                                        \n                                    </td>\n                                </tr>\n                            )\n                        }) \n                    }\n                </table>\n                {\n                    announcements.length > 0 ? (\n                    \n                    <Pagination\n                        // data={posts}\n                        // RenderComponent={Post}\n                        dataLength={announcements.length}\n                        pageLimit={5}\n                        dataLimit={5}\n                    />\n                    \n                ) : (\n                <h1>No Posts to display</h1>\n                )}\n            </div>    \n        </>\n    )\n}\n\nexport default AnnouncementList;"],"names":["dataLength","pageLimit","dataLimit","useState","Math","round","pages","currentPage","setCurrentPage","changePage","event","pageNumber","Number","target","textContent","useEffect","window","scrollTo","behavior","top","className","onClick","page","start","floor","Array","fill","map","_","idx","getPaginationGroup","item","index","token","localStorage","getItem","announcements","setAnnouncements","useNavigate","getKolAllAnnouncements","data","to","title","description","start_date","end_date","social_platform","status","image","id","length"],"sourceRoot":""}